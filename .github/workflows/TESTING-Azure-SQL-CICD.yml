# .github/workflows/ah-sql-template.yml
name: TESTING Azure SQL CICD

#Sets the trigger to update when update is pushed to main branch
on:
  push:
    branches: 
      - main
    paths:
      - '**.sqlproj'
      - '**/dbo/**'
      - '**/SalesLT/**'
      - '**/Security/**'
  workflow_dispatch:

env:
  ResourceGroup: rg-adfdevops-demo

permissions:
      id-token: write
      contents: read

jobs:
  # Deploy dacpac job
  DeployAzureSQLDB:
    # Set the dependency for the build job
#    needs: build
    environment: SIT
    # Easier to use Github-hosted runner if updating in GitHub
    runs-on: windows-latest

    # Steps to deploy the updates to Azure SQL Database
    # To keep this example simple, the Firewall settings in the logical SQL Server allows access from Azure services and resources
    # An alternative is to use the Azure Login GitHub Action https://github.com/marketplace/actions/azure-login
    steps:

      - name: STEP 7 Azure SQL Deploy
      # Login using Azure credentials 
      # Required to add a temporary firewall rule for the runner
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#          creds: ${{ secrets.AZURE_CREDENTIALS }} 
      - uses: Azure/sql-action@v2
        with:
          connection-string: ${{ secrets.AZURE_SQL_CONNECTION_STRING }}
#          path: './DatabaseProjectADFCICD.dacpac'
          path: 'DatabaseProjectADFCICD.sqlproj'
          action: 'publish'
