# adf-cicd.yml

name: Azure Data Factory CICD

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/.github/workflows/**'
  workflow_dispatch:

env:
  ResourceGroup: rg-adfdevops-demo

permissions:
      id-token: write
      contents: read
  
jobs:
  
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        
      - name: Export ARM Template
        id: export
        uses: Azure/data-factory-export-action@v1.0.2
        
      # Uploading our artifact from adf_publish branch
      - uses: actions/upload-artifact@v3
        with:
          name: adf-artifact
          path: ${{ steps.export.outputs.arm-template-directory }}
          
  SIT_Deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: SIT
    steps:
    
      # Downloading the artifact we uploaded earlier
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: adf-artifact

#      - name: 'Az CLI login with subscription'
#        uses: azure/login@v1
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      # Logging in to Azure with OIDC
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
           client-id: ${{ secrets.AZURE_CLIENT_ID }}
           tenant-id: ${{ secrets.AZURE_TENANT_ID }}
           subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
           enable-AzPSSession: true 
          
      # Deploying to SIT environment
      - name: Deploy resources to SIT
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: ${{ env.ResourceGroup }}
          dataFactoryName: ADF-KMCICDDemo-SIT
          armTemplateFile: ARMTemplateForFactory.json
      - name: PR Approve
        uses: actions-cool/pr-approve@v0.0.1-beat

  UAT_Deploy:
    runs-on: ubuntu-latest
    needs: SIT_Deploy
    environment: UAT
    steps:
    
      # Downloading the artifact we uploaded earlier
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: adf-artifact

#      - name: 'Az CLI login with subscription'
#        uses: azure/login@v1
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      # Logging in to Azure with OIDC
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
           client-id: ${{ secrets.AZURE_CLIENT_ID }}
           tenant-id: ${{ secrets.AZURE_TENANT_ID }}
           subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
           enable-AzPSSession: true 
          
      # Deploying to UAT environment
      - name: Deploy resources to UAT
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: ${{ env.ResourceGroup }}
          dataFactoryName: ADF-KMCICDDemo-UAT
          armTemplateFile: ARMTemplateForFactory.json

  PROD_Deploy:
    runs-on: ubuntu-latest
    needs: UAT_Deploy
    environment: PROD
    steps:
    
      # Downloading the artifact we uploaded earlier
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: adf-artifact

#      - name: 'Az CLI login with subscription'
#        uses: azure/login@v1
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      # Logging in to Azure with OIDC
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
           client-id: ${{ secrets.AZURE_CLIENT_ID }}
           tenant-id: ${{ secrets.AZURE_TENANT_ID }}
           subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
           enable-AzPSSession: true 
          
      # Deploying to PROD environment
      - name: Deploy resources to Production
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          resourceGroupName: ${{ env.ResourceGroup }}
          dataFactoryName: ADF-KMCICDDemo-PROD
          armTemplateFile: ARMTemplateForFactory.json
          

          

