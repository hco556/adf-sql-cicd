# .github/workflows/ah-sql-template.yml
name: WORKING Azure SQL CICD

#Sets the trigger to update when update is pushed to main branch
on:
  push:
    branches: 
      - main
    paths:
      - '**.sqlproj'
      - '**/dbo/**'
      - '**/SalesLT/**'
      - '**/Security/**'
  workflow_dispatch:

env:
  ResourceGroup: rg-adfdevops-demo

permissions:
      id-token: write
      contents: read

jobs:

  # Job to build and publish the dacpac
  build:
    # Easier to use Github-hosted runner if updating in GitHub
    runs-on: windows-2019

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:                                                                    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: STEP 1 Check out repository                                                                                                                                            
        uses: actions/checkout@v2.3.4
      # Find msbuild                                      
      - name: STEP 2 Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      # create dacpac using MSBUILD
      - name: STEP 3 Build Database project
        run: |
          msbuild.exe DatabaseProjectADFCICD.sqlproj /p:Configuration=Release
      # Publish artifact
      - name: STEP 4 Publish artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: DatabaseProjectADFCICD
          path: ${{ github.workspace }}/bin/Release/ 

  # Deploy dacpac job
  DeployAzureSQLDB:
    # Set the dependency for the build job
    needs: build
    environment: SIT
    # Easier to use Github-hosted runner if updating in GitHub
    runs-on: windows-latest

    # Steps to deploy the updates to Azure SQL Database
    # To keep this example simple, the Firewall settings in the logical SQL Server allows access from Azure services and resources
    # An alternative is to use the Azure Login GitHub Action https://github.com/marketplace/actions/azure-login
    steps:
      - name: STEP 5 download artifact containing dacpac
        # Dowloads Data artifact to dacpac folder
        uses: actions/download-artifact@v3.0.0
        with:
          name: DatabaseProjectADFCICD


        

      - name: STEP 7 Azure SQL Deploy
      # Login using Azure credentials 
      # Required to add a temporary firewall rule for the runner
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} 
      - uses: Azure/sql-action@v2
        with:
          connection-string: ${{ secrets.AZURE_SQL_CONNECTION_STRING }}
          path: './DatabaseProjectADFCICD.dacpac'
          action: 'publish'
